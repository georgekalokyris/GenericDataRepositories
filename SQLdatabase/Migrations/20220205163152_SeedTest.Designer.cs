// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SQLdatabase;

namespace SQLdatabase.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220205163152_SeedTest")]
    partial class SeedTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaCode = "000",
                            Name = "Dream City"
                        },
                        new
                        {
                            Id = 2,
                            AreaCode = "666",
                            Name = "Gotham City"
                        });
                });

            modelBuilder.Entity("Common.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Common.TotalCases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("TotalCases");
                });

            modelBuilder.Entity("Common.City", b =>
                {
                    b.HasOne("Common.Country", "country")
                        .WithMany("Cities")
                        .HasForeignKey("countryId");

                    b.Navigation("country");
                });

            modelBuilder.Entity("Common.TotalCases", b =>
                {
                    b.HasOne("Common.City", null)
                        .WithMany("covidCasesPerDay")
                        .HasForeignKey("CityId");

                    b.HasOne("Common.Country", null)
                        .WithMany("covidCasesPerDay")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("Common.City", b =>
                {
                    b.Navigation("covidCasesPerDay");
                });

            modelBuilder.Entity("Common.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("covidCasesPerDay");
                });
#pragma warning restore 612, 618
        }
    }
}
